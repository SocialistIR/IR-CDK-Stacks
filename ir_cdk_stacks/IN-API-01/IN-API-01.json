{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Stack for IR_API_01",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [{
        "Label": {
          "default": "S3 Location"
        },
        "Parameters": ["CloudFrontCreateAccessLogBucket","CloudFrontAccessLogBucket"]
      }, {
        "Label": {
          "default": "Rate-Based Blacklisting Parameters"
        },
        "Parameters": ["RequestThreshold", "WAFBlockPeriod", "WAFQuarantinePeriod"]
      }],
      "ParameterLabels": {
        "CloudFrontCreateAccessLogBucket": {
          "default": "Create CloudFront Access Log Bucket"
        },
        "CloudFrontAccessLogBucket": {
          "default": "CloudFront Access Log Bucket Name"
        },
        "RequestThreshold": {
          "default": "Request Threshold"
        },
        "WAFBlockPeriod": {
          "default": "WAF Block Period"
        },
        "WAFQuarantinePeriod": {
          "default": "WAF Quarantine Period"
        }
      }
    }
  },

  "Parameters": {
    "CloudFrontCreateAccessLogBucket": {
      "Type" : "String",
      "Default" : "yes",
      "AllowedValues" : ["yes", "no"],
      "Description" : "Select Yes to create a new S3 bucket for CloudFront Access Logs. Select No if you already have an S3 bucket for CloudFront Access logs."
    },
    "CloudFrontAccessLogBucket": {
      "Type": "String",
      "Default": "",
      "Description": "Enter the name of the S3 bucket where you will store the CloudFront access logs (e.g., http://bucket.s3-aws-region.amazonaws.com)"
    },
    "RequestThreshold": {
      "Type": "Number",
      "Default": "400",
      "Description": "Enter the maximum acceptable request per second per IP address. Default: 400 requests per minute"
    },
    "WAFBlockPeriod": {
      "Type": "Number",
      "Default": "60",
      "Description": "Enter for how long (in minutes) IP addresses should be blocked. Default: 1 hour (60 minutes)"
    },
    "WAFQuarantinePeriod": {
      "Type": "Number",
      "Default": "60",
      "Description": "Enter for how long (in minutes) IP addresses should be kept in quarantine. Default: 1 hour (60 minutes)"
    }
  },

  "Conditions" : {
    "CreateBucket" : {"Fn::Equals" : [{"Ref" : "CloudFrontCreateAccessLogBucket"}, "yes"]}
  },

  "Resources": {
    "WAFManualBlockSet": {
      "Type": "AWS::WAFRegional::IPSet",
      "Properties": {
        "Name": "Manual Block Set"
      }
    },
    "WAFAutoBlockSet": {
      "Type": "AWS::WAFRegional::IPSet",
      "Properties": {
        "Name": "Auto Block Set"
      }
    },
    "WAFAutoCountSet": {
      "Type": "AWS::WAFRegional::IPSet",
      "Properties": {
        "Name": "Auto Count Set"
      }
    },
    "WAFManualBlockRule": {
      "Type": "AWS::WAFRegional::Rule",
      "DependsOn": "WAFManualBlockSet",
      "Properties": {
        "Name": "Manual Block Rule",
        "MetricName": "ManualBlockRule",
        "Predicates": [{
          "DataId": {
            "Ref": "WAFManualBlockSet"
          },
          "Negated": false,
          "Type": "IPMatch"
        }]
      }
    },
    "WAFAutoBlockRule": {
      "Type": "AWS::WAFRegional::Rule",
      "DependsOn": "WAFAutoBlockSet",
      "Properties": {
        "Name": "Auto Block Rule",
        "MetricName": "AutoBlockRule",
        "Predicates": [{
          "DataId": {
            "Ref": "WAFAutoBlockSet"
          },
          "Negated": false,
          "Type": "IPMatch"
        }]
      }
    },
    "WAFAutoCountRule": {
      "Type": "AWS::WAFRegional::Rule",
      "DependsOn": "WAFAutoCountSet",
      "Properties": {
        "Name": "Auto Count Rule",
        "MetricName": "AutoCountRule",
        "Predicates": [{
          "DataId": {
            "Ref": "WAFAutoCountSet"
          },
          "Negated": false,
          "Type": "IPMatch"
        }]
      }
    },
    "WAFWebACL": {
      "Type": "AWS::WAFRegional::WebACL",
      "DependsOn": ["WAFManualBlockRule", "WAFAutoBlockRule", "WAFAutoCountRule"],
      "Properties": {
        "Name": "IN-API-01_WACL",
        "DefaultAction": {
          "Type": "ALLOW"
        },
        "MetricName": "IN-API-01",
        "Rules": [{
          "Action": {
            "Type": "BLOCK"
          },
          "Priority": 1,
          "RuleId": {
            "Ref": "WAFManualBlockRule"
          }
        }, {
          "Action": {
            "Type": "BLOCK"
          },
          "Priority": 2,
          "RuleId": {
            "Ref": "WAFAutoBlockRule"
          }
        }, {
          "Action": {
            "Type": "COUNT"
          },
          "Priority": 3,
          "RuleId": {
            "Ref": "WAFAutoCountRule"
          }
        }]
      }
    },
	
	"SnsTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "Subscription": [
                    {
                        "Endpoint": "korupalli87122@gmail.com",
                        "Protocol": "email"
                    }
                ],
                "TopicName": "IN-API-01-IPBlocked"
            }
    },
	"CloudWatchAlarm": {
		"Type": "AWS::CloudWatch::Alarm",
		"Properties": {
			"AlarmName": "Test1",
			"ComparisonOperator": "GreaterThanThreshold",
			"EvaluationPeriods": 10,
			"MetricName": "IPBlocked",
			"Namespace": "IN-API-01-api-flood-logs",
			"Period": 10,
			"AlarmActions": [
				{
					"Ref": "SnsTopic"
				}
			],
			"Statistic": "Sum",
			"Threshold": "2.0",
			"Unit": "Count"
		}
	},
	
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": ["lambda.amazonaws.com"]
            },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "S3Access",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": "s3:*",
              "Resource": "*"
            }]
          }
        }, {
          "PolicyName": "WAFAccess",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
            "Action": [
                "waf-regional:UpdateIPSet",
                "waf-regional:GetIPSet"
            ],
            "Resource": "arn:aws:waf-regional:*:*:ipset/*"
            }]
          }
        }, {
          "PolicyName": "LogsAccess",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": "logs:*",
              "Resource": "*"
            }]
          }
        }, {
          "PolicyName": "LambdAccess",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": "lambda:*",
              "Resource": "*"
            }]
          }
        }, {
          "PolicyName": "CloudFormationAccess",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": "cloudformation:DescribeStacks",
              "Resource": "*"
            }]
          }
        }, {
          "PolicyName": "SNSAccess",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
            "Action": [
                "SNS:Publish"
            ],
            "Resource": "arn:aws:sns:us-east-1:544820149332:IN-API-01-IPBlocked"
            }]
          }
        }, {
          "PolicyName": "CloudWatchAccess",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": "cloudwatch:PutMetricData",
              "Resource": "*"
            }]
          }
        }]
      }
    },
    "INAPI01Lambda": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": "LambdaRole",
      "Properties": {
        "Description": {
          "Fn::Join": [":", [{
            "Ref": "RequestThreshold"
          }, {
            "Ref": "WAFBlockPeriod"
          }, {
            "Ref": "WAFQuarantinePeriod"
          }]]
        },
        "Handler": "parser.lambda_handler",
        "Role": {
          "Fn::GetAtt": ["LambdaRole", "Arn"]
        },
        "Code": {
          "S3Bucket": "testbuckforall",
          "S3Key": "waf-reactive-blacklist/parser.zip"
        },
        "Runtime": "python2.7",
        "MemorySize": "512",
        "Timeout": "60"
      }
    },
    "LambdaInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": "INAPI01Lambda",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": ["INAPI01Lambda", "Arn"]
        },
        "Action": "lambda:*",
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      }
    },
    "S3CloudFrontAccessLogBucket": {
      "Type": "AWS::S3::Bucket",
      "Condition" : "CreateBucket",
      "DependsOn": "INAPI01Lambda",
      "Properties": {
        "BucketName": {
          "Ref": "CloudFrontAccessLogBucket"
        },
        "AccessControl": "Private",
        "NotificationConfiguration": {
          "LambdaConfigurations": [{
            "Event": "s3:ObjectCreated:*",
            "Filter": {
              "S3Key": {
                "Rules": [{
                  "Name": "suffix",
                  "Value": "gz"
                }]
              }
            },
            "Function": {
              "Fn::GetAtt": ["INAPI01Lambda", "Arn"]
            }
          }]
        }
      },
      "DeletionPolicy": "Retain"
    }
  },

  "Outputs": {
    "CloudFrontAccessLogBucket": {
      "Description": "CloudFront Access Log Bucket",
      "Value": {
        "Ref": "CloudFrontAccessLogBucket"
      },
      "Condition" : "CreateBucket"
    },
    "RequestThreshold": {
      "Description": "Request Threshold",
      "Value": {
        "Ref": "RequestThreshold"
      }
    },
    "WAFBlockPeriod": {
      "Description": "WAF Block Period",
      "Value": {
        "Ref": "WAFBlockPeriod"
      }
    },
    "WAFQuarantinePeriod": {
      "Description": "WAF Quarantine Period",
      "Value": {
        "Ref": "WAFQuarantinePeriod"
      }
    },
    "ManualBlockIPSetID": {
      "Description": "Manual Block IP Set ID",
      "Value": {
        "Ref": "WAFManualBlockSet"
      }
    },
    "AutoBlockIPSetID": {
      "Description": "Auto Block IP Set ID",
      "Value": {
        "Ref": "WAFAutoBlockSet"
      }
    },
    "AutoCountIPSetID": {
      "Description": "Auto Count IP Set ID",
      "Value": {
        "Ref": "WAFAutoCountSet"
      }
    }
  }
}
